[package]
name = "claude-code-usage-rs"
version = "0.1.0"
edition = "2021"
authors = ["ccusage-rs Team"]
description = "Rust implementation of Claude Code usage analysis tool"
license = "MIT"
repository = "https://github.com/your-org/claude-code-usage-rs"
homepage = "https://github.com/your-org/claude-code-usage-rs"
documentation = "https://docs.rs/claude-code-usage-rs"
readme = "README.md"
keywords = ["claude", "usage", "analysis", "cli", "rust"]
categories = ["command-line-utilities", "development-tools"]
exclude = ["/tmp", "/target", "/.git", "/.github"]

[dependencies]
# 基础运行时和序列化
tokio = { version = "1.42", features = ["full"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
clap = { version = "4.5", features = ["derive"] }
chrono = { version = "0.4", features = ["serde"] }
anyhow = "1.0"
thiserror = "1.0"

# 正则表达式
regex = "1.11"

# 配置
config = "0.14"

# 日志
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# 文件和目录处理
dirs = "5.0"
walkdir = "2.5"

# 输出格式化
comfy-table = "7.1"
csv = "1.3"

# 工具库
uuid = { version = "1.11", features = ["v4", "serde"] }
toml = "0.8"
which = "7.0"
pathdiff = "0.2"

# 网络功能
reqwest = { version = "0.12", features = ["json"] }
url = "2.5"

# 监控功能 (可选)
notify = { version = "7.0", optional = true }

# 高级功能 (可选)
indicatif = { version = "0.17", optional = true }

[dev-dependencies]
# 基础测试
tokio-test = "0.4"
pretty_assertions = "1.4"

# 集成测试
assert_cmd = "2.0"
predicates = "3.1"

# 测试数据生成
fake = { version = "3.0", features = ["derive", "chrono"] }
rand = "0.8"

# HTTP 模拟
mockito = "1.6"

# 性能测试
criterion = { version = "0.5", features = ["html_reports"] }

# 测试覆盖率
cargo-tarpaulin = "0.27"

# 临时目录测试
tempfile = "3.8"

# 仿真测试
mockall = "0.12"

# 序列化测试
serde_test = "1.0"

# 异步测试
futures = "0.3"

# 基准测试
divan = "0.1"

# 内存测试
memory-stats = "1.0"

# 网络测试
wiremock = "0.6"

# 数据库测试 (如果需要)
sqlx = { version = "0.7", features = ["sqlite", "runtime-tokio-rustls", "chrono"] }

[features]
default = ["core"]
core = []

# 可选功能组
monitoring = ["notify"]
advanced = ["indicatif"]

# 完整功能
full = ["core", "monitoring", "advanced"]

# 开发工具
dev-tools = []

# 性能优化
performance = ["tokio/rt-multi-thread", "tokio/net"]

# 平台特定功能
unix = ["tokio/net"]
windows = ["tokio/net"]

# 测试配置
[[test]]
name = "unit_tests"
path = "tests/unit_tests.rs"
harness = true

[[test]]
name = "integration_tests"
path = "tests/integration_tests.rs"
harness = true

[[test]]
name = "e2e_tests"
path = "tests/e2e_tests.rs"
harness = true

[[test]]
name = "performance_tests"
path = "tests/performance_tests.rs"
harness = true

[[test]]
name = "error_tests"
path = "tests/error_tests.rs"
harness = true

[[test]]
name = "foundation_tests"
path = "tests/foundation_tests.rs"
harness = true

[[test]]
name = "standalone_tests"
path = "tests/standalone_tests.rs"
harness = true

[[test]]
name = "comprehensive_tests"
path = "tests/comprehensive_tests.rs"
harness = true

[[bench]]
name = "simplified_benchmarks"
harness = false

[profile.test]
opt-level = 1
debug = true
overflow-checks = true

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
strip = true
debug = false

[profile.bench]
opt-level = 3
lto = true
codegen-units = 1
debug = false

[[bin]]
name = "ccusage-rs"
path = "src/main.rs"
test = true
bench = true
doc = true


[package.metadata.docs.rs]
features = ["full"]
targets = ["x86_64-unknown-linux-gnu", "x86_64-apple-darwin", "x86_64-pc-windows-msvc"]
rustdoc-args = ["--cfg", "docsrs"]

[package.metadata.cross.target.x86_64-unknown-linux-gnu]
image = "rust:latest"

[package.metadata.cross.target.aarch64-unknown-linux-gnu]
image = "rust:latest"

[package.metadata.cross.target.x86_64-pc-windows-gnu]
image = "rust:latest"

[package.metadata.cargo-machete]
ignored = ["tracing", "tracing-subscriber", "indicatif", "reqwest", "url", "notify"]

[lints.rust]
dead_code = "warn"
unused_imports = "warn"
unused_variables = "warn"
unused_mut = "warn"
unused_attributes = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unsafe_code = "forbid"

[lints.clippy]
all = "warn"
pedantic = "warn"
nursery = "warn"
cargo = "warn"
# Allow some pedantic lints for practicality
module_name_repetitions = "allow"
must_use_candidate = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"
option_if_let_else = "allow"
redundant_else = "allow"
# Performance-related lints
clone_on_ref_ptr = "warn"
inefficient_to_string = "warn"
large_types_passed_by_value = "warn"
large_stack_frames = "warn"
unnecessary_box_returns = "warn"
# Readability lints
unreadable_literal = "warn"
too_many_lines = "warn"
# Complexity lints
cognitive_complexity = "warn"
too_many_arguments = "warn"
type_complexity = "warn"